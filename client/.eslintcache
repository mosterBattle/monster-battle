[{"/Users/brendankurbkylo/Desktop/monster-battle/client/src/index.js":"1","/Users/brendankurbkylo/Desktop/monster-battle/client/src/reportWebVitals.js":"2","/Users/brendankurbkylo/Desktop/monster-battle/client/src/App.js":"3","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Login.js":"4","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Signup.js":"5","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/AddMonster.js":"6","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Profile.js":"7","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/battlefield.js":"8","/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/gamelogic.js":"9","/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/auth.js":"10","/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/queries.js":"11","/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/mutations.js":"12","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/title.js":"13","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/winscreen.js":"14","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/Logout/index.js":"15","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/MonsterList/index.js":"16","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/Header/index.js":"17"},{"size":500,"mtime":1629303239246,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1629303239247,"results":"20","hashOfConfig":"19"},{"size":2115,"mtime":1629406085410,"results":"21","hashOfConfig":"19"},{"size":2482,"mtime":1629303239246,"results":"22","hashOfConfig":"19"},{"size":2635,"mtime":1629303239247,"results":"23","hashOfConfig":"19"},{"size":4041,"mtime":1629409259549,"results":"24","hashOfConfig":"19"},{"size":1757,"mtime":1629409259550,"results":"25","hashOfConfig":"19"},{"size":4433,"mtime":1629409259550,"results":"26","hashOfConfig":"19"},{"size":4219,"mtime":1629409259550,"results":"27","hashOfConfig":"19"},{"size":1043,"mtime":1629303239247,"results":"28","hashOfConfig":"19"},{"size":1187,"mtime":1629406085508,"results":"29","hashOfConfig":"19"},{"size":1022,"mtime":1629406085507,"results":"30","hashOfConfig":"19"},{"size":175,"mtime":1629303239246,"results":"31","hashOfConfig":"19"},{"size":891,"mtime":1629409259549,"results":"32","hashOfConfig":"19"},{"size":430,"mtime":1629406085411,"results":"33","hashOfConfig":"19"},{"size":1307,"mtime":1629406085411,"results":"34","hashOfConfig":"19"},{"size":1015,"mtime":1629303239246,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"co17cw",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brendankurbkylo/Desktop/monster-battle/client/src/index.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/reportWebVitals.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/App.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Login.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Signup.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/AddMonster.js",["74"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_MONSTER } from '../utils/mutations';\n\nconst AddMonster = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    level: '',\n    hp: '',\n    str: '',\n    def: '',\n    spd: '',\n    swg: '',\n  });\n  const [addMonster, { error, data }] = useMutation(ADD_MONSTER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    formState.level = parseInt(formState.level);\n    formState.hp = parseInt(formState.hp);\n    formState.str = parseInt(formState.str);\n    formState.def = parseInt(formState.def);\n    formState.spd = parseInt(formState.spd);\n    formState.swg = parseInt(formState.swg);\n\n    try {\n      const { data } = await addMonster({\n        variables: { ...formState },\n      });\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"mainBody\">\n          <div className=\"mainOptions\">\n            {data ? (\n              <p className=\"text-white\">\n                Success! You may now head <Link to=\"/\">back to your profile</Link>\n              </p>\n            ) : (\n              <div>\n              <h4 >Add a Monster or <Link to=\"/\">go back</Link></h4>\n              <form onSubmit={handleFormSubmit} className=\"d-flex flex-column align-center\">\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Your monster's name\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Level\"\n                  name=\"level\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.level}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Maximum Health Points\"\n                  name=\"hp\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.hp}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Strength\"\n                  name=\"str\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.str}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Defense\"\n                  name=\"def\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.def}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Speed\"\n                  name=\"spd\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.spd}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"formInput\"\n                  placeholder=\"Swagger\"\n                  name=\"swg\"\n                  type=\"number\"\n                  min=\"1\"\n                  value={formState.swg}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"mainBtn\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n              </div>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n      </div>\n    </div>\n  );\n};\n\nexport default AddMonster;\n","/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/Profile.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/pages/battlefield.js",["75","76"],"import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport character from '../assets/Bot Wheel/botWheel.png';\nimport character2 from '../assets/Spirit Boxer/spiritBoxer.png';\nimport '../assets/css/battlefield.css';\nimport '../assets/css/reset.css';\n\nimport { battleAction } from '../utils/gamelogic.js';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { QUERY_SINGLE_MONSTER, QUERY_USER, QUERY_ME } from '../utils/queries';\nimport Victory from '../components/winscreen';\nimport Title from '../components/title';\n\n\nfunction Battlefield() {    \n    const { monsterId } = useParams();\n\n    const { loading, data } = useQuery(QUERY_SINGLE_MONSTER, {\n        // pass URL parameter\n        variables: { monsterId: monsterId },\n    });\n\n    const monster = data?.monster || {};\n\n    const { username: userParam } = useParams();\n\n    const { userLoading, userData } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n      variables: { username: userParam },\n    });\n\n    const user = userData?.me || userData?.user || {};\n\n    return (            \n        <Card bg={'dark'}>\n            <Title />\n            <Card.Body>\n                <div className='background'>\n                    <div className=\"characterWrapper\">\n                    <img className='monster' src={character} alt='character'/>\n                    <img className='monster switchView' src={character2} alt='character2'/>\n                    </div>\n                </div> \n            </Card.Body>\n            <Card.Body>\n                <Row>\n                    <Col xs={12}>\n                        <p className=\"ingameText\">Test</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} sm={6} lg={3}>\n                        <Button \n                        variant=\"outline-primary\" \n                        data-attack=\"0\" \n                        data-name={monster.name}\n                        data-hp={monster.hp}\n                        data-str={monster.str}\n                        data-def={monster.def}\n                        data-spd={monster.spd}\n                        data-swg={monster.swg}\n                        onClick={battleAction}>Attack</Button>\n                    </Col>\n                    <Col xs={12} sm={6} lg={3}>\n                        <Button variant=\"outline-danger\" \n                        data-attack=\"1\"  \n                        data-name={monster.name}\n                        data-hp={monster.hp}\n                        data-str={monster.str}\n                        data-def={monster.def}\n                        data-spd={monster.spd}\n                        data-swg={monster.swg}\n                        onClick={battleAction}>Defend While Attacking</Button>\n                    </Col>\n                    <Col xs={12} sm={6} lg={3}>\n                        <Button variant=\"outline-warning\"\n                        data-attack=\"2\" \n                        data-name={monster.name}\n                        data-hp={monster.hp}\n                        data-str={monster.str}\n                        data-def={monster.def}\n                        data-spd={monster.spd}\n                        data-swg={monster.swg}\n                        onClick={battleAction}>Attack While Defending</Button>\n                        </Col>\n                    <Col xs={12} sm={6} lg={3}>\n                        <Button variant=\"outline-success\" \n                        data-attack=\"3\" \n                        data-name={monster.name}\n                        data-hp={monster.hp}\n                        data-str={monster.str}\n                        data-def={monster.def}\n                        data-spd={monster.spd}\n                        data-swg={monster.swg}\n                        onClick={battleAction}>Defend</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Victory userId={user._id}/>\n                </Row>\n            </Card.Body>\n            <audio autoPlay loop>\n                <source src=\"/audio/game-audio.mp3\" type=\"audio/mpeg\" />\n                Your browser does not support the audio element.\n            </audio>\n      </Card>   \n    );\n}\n\nexport default Battlefield;","/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/gamelogic.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/auth.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/queries.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/utils/mutations.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/title.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/winscreen.js",["77"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_GOLD } from '../utils/mutations';\n\n\nconst Victory = ({ userId }) => {\n    const gold = 100;\n    const reward = \"Collect reward\";\n\n    const [addGold, { error }] = useMutation(ADD_GOLD);\n\n    const handleBattleOutcome = async (event) => {\n        event.preventDefault();\n\n        try {\n            const { data } = await addGold({\n                variables: { userId, gold },\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Victory!</h1>\n            <button value={gold} onClick={handleBattleOutcome}>{reward}</button>\n            {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              {error.message}\n            </div>\n          )}\n        </div>\n    )\n};\n\nexport default Victory;","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/Logout/index.js",["78"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n      <div className=\"align-items-right\">\n          <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n            </button>\n        </div>\n  );\n};\n\nexport default Header;\n","/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/MonsterList/index.js",[],"/Users/brendankurbkylo/Desktop/monster-battle/client/src/components/Header/index.js",[],{"ruleId":"79","severity":1,"message":"80","line":38,"column":15,"nodeType":"81","messageId":"82","endLine":38,"endColumn":19},{"ruleId":"79","severity":1,"message":"83","line":24,"column":13,"nodeType":"81","messageId":"82","endLine":24,"endColumn":20},{"ruleId":"79","severity":1,"message":"84","line":33,"column":13,"nodeType":"81","messageId":"82","endLine":33,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":17,"column":21,"nodeType":"81","messageId":"82","endLine":17,"endColumn":25},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'Link' is defined but never used."]