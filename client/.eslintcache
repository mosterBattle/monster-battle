[{"/Users/me/Desktop/monster-battle/client/src/index.js":"1","/Users/me/Desktop/monster-battle/client/src/reportWebVitals.js":"2","/Users/me/Desktop/monster-battle/client/src/App.js":"3","/Users/me/Desktop/monster-battle/client/src/pages/Home.js":"4","/Users/me/Desktop/monster-battle/client/src/pages/Login.js":"5","/Users/me/Desktop/monster-battle/client/src/pages/Signup.js":"6","/Users/me/Desktop/monster-battle/client/src/pages/SingleThought.js":"7","/Users/me/Desktop/monster-battle/client/src/pages/Profile.js":"8","/Users/me/Desktop/monster-battle/client/src/components/Footer/index.js":"9","/Users/me/Desktop/monster-battle/client/src/components/Header/index.js":"10","/Users/me/Desktop/monster-battle/client/src/utils/queries.js":"11","/Users/me/Desktop/monster-battle/client/src/utils/auth.js":"12","/Users/me/Desktop/monster-battle/client/src/utils/mutations.js":"13","/Users/me/Desktop/monster-battle/client/src/components/CommentList/index.js":"14","/Users/me/Desktop/monster-battle/client/src/components/CommentForm/index.js":"15","/Users/me/Desktop/monster-battle/client/src/components/ThoughtList/index.js":"16","/Users/me/Desktop/monster-battle/client/src/components/ThoughtForm/index.js":"17"},{"size":500,"mtime":1628635236973,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1628635236979,"results":"20","hashOfConfig":"19"},{"size":2149,"mtime":1628637388162,"results":"21","hashOfConfig":"19"},{"size":465,"mtime":1628635236975,"results":"22","hashOfConfig":"19"},{"size":2423,"mtime":1628639623152,"results":"23","hashOfConfig":"19"},{"size":2576,"mtime":1628639746211,"results":"24","hashOfConfig":"19"},{"size":1562,"mtime":1628635236979,"results":"25","hashOfConfig":"19"},{"size":1724,"mtime":1628635236977,"results":"26","hashOfConfig":"19"},{"size":844,"mtime":1628635236967,"results":"27","hashOfConfig":"19"},{"size":1055,"mtime":1628639915354,"results":"28","hashOfConfig":"19"},{"size":908,"mtime":1628635236982,"results":"29","hashOfConfig":"19"},{"size":1043,"mtime":1628635236980,"results":"30","hashOfConfig":"19"},{"size":1077,"mtime":1628635236981,"results":"31","hashOfConfig":"19"},{"size":953,"mtime":1628635236967,"results":"32","hashOfConfig":"19"},{"size":2410,"mtime":1628635236966,"results":"33","hashOfConfig":"19"},{"size":1502,"mtime":1628635236972,"results":"34","hashOfConfig":"19"},{"size":3080,"mtime":1628635236971,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"se7q4w",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/Users/me/Desktop/monster-battle/client/src/index.js",[],["75","76"],"/Users/me/Desktop/monster-battle/client/src/reportWebVitals.js",[],"/Users/me/Desktop/monster-battle/client/src/App.js",["77"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-center min-100-vh\">\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n              <Header />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/thoughts/:thoughtId\">\n              <SingleThought />\n            </Route>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/me/Desktop/monster-battle/client/src/pages/Home.js",["78","79","80","81"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\"></div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/me/Desktop/monster-battle/client/src/pages/Login.js",[],"/Users/me/Desktop/monster-battle/client/src/pages/Signup.js",[],"/Users/me/Desktop/monster-battle/client/src/pages/SingleThought.js",[],"/Users/me/Desktop/monster-battle/client/src/pages/Profile.js",[],"/Users/me/Desktop/monster-battle/client/src/components/Footer/index.js",[],"/Users/me/Desktop/monster-battle/client/src/components/Header/index.js",[],"/Users/me/Desktop/monster-battle/client/src/utils/queries.js",[],"/Users/me/Desktop/monster-battle/client/src/utils/auth.js",[],"/Users/me/Desktop/monster-battle/client/src/utils/mutations.js",[],"/Users/me/Desktop/monster-battle/client/src/components/CommentList/index.js",[],"/Users/me/Desktop/monster-battle/client/src/components/CommentForm/index.js",["82"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/me/Desktop/monster-battle/client/src/components/ThoughtList/index.js",[],"/Users/me/Desktop/monster-battle/client/src/components/ThoughtForm/index.js",["83"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":17,"column":8,"nodeType":"90","messageId":"91","endLine":17,"endColumn":14},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":19},{"ruleId":"88","severity":1,"message":"94","line":10,"column":11,"nodeType":"90","messageId":"91","endLine":10,"endColumn":18},{"ruleId":"88","severity":1,"message":"95","line":11,"column":9,"nodeType":"90","messageId":"91","endLine":11,"endColumn":17},{"ruleId":"88","severity":1,"message":"96","line":19,"column":15,"nodeType":"90","messageId":"91","endLine":19,"endColumn":19},{"ruleId":"88","severity":1,"message":"96","line":41,"column":15,"nodeType":"90","messageId":"91","endLine":41,"endColumn":19},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'ThoughtList' is defined but never used.","'ThoughtForm' is defined but never used.","'loading' is assigned a value but never used.","'thoughts' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]